#pragma once
#ifndef __SMF_ERROR_H__
#define __SMF_ERROR_H__
#include <stdint.h>
///
typedef union {
	uint64_t err64;
	uint32_t err32[2];
	uint16_t err16[4];
	struct {
		union {
			uint16_t err;
			struct {
				uint16_t errid : 12;
				uint16_t errmask : 4;
			};			
		};
		uint16_t sub;	
		uint16_t file;
		uint16_t line;				
	};
}smf_error_t;

///
enum smf_error_e{
	SMF_ERROR_OK = 0,
	//
	SMF_ERROR_MASK							= 0xF000,
	SMF_ERROR_MASK_FATAL					= 0x1000,
	SMF_ERROR_MASK_USER						= 0x8000,
	//
	SMF_ERROR_FAIL							= 0x0001,	
	//
	SMF_ERROR_INVALID_INSTANCE				= 0x0100,	
	SMF_ERROR_INVALID_INPUT					= 0x0101,	
	SMF_ERROR_INVALID_HANDLE				= 0x0102,	
	SMF_ERROR_INVALID_PACKET				= 0x0103,
	//
	SMF_ERROR_POOL_IS_NULL					= 0x0110,
	SMF_ERROR_POOL_ALLOC_NULL				= 0x0111,	
	SMF_ERROR_POOL_CALLOC_NULL				= 0x0112,
	SMF_ERROR_POOL_REALLOC_NULL				= 0x0113,
	//
	SMF_ERROR_IO_EOS						= 0x0200,
	SMF_ERROR_IO_READ_NOT_ENOUGH			= 0x0201,
	SMF_ERROR_IO_SEEK_FAIL					= 0x0202,
	SMF_ERROR_IO_READ_FAIL					= 0x0203,
	SMF_ERROR_IO_WRITE_FAIL					= 0x0204,
	SMF_ERROR_IO_FAIL						= 0x0205,
	SMF_ERROR_IO_OPEN_FAIL					= 0x0206,
	//
	SMF_ERROR_OUTPUT_BUFFER_NOT_ENOUGH		= 0x0300,
	SMF_ERROR_INPUT_BUFFER_NOT_ENOUGH		= 0x0301,
	SMF_ERROR_FRAME_DISCARD					= 0x0302,
	//
	SMF_ERROR_BUFF_WRITE_OVERFLOW			= 0x0400,
	//
	SMF_ERROR_UNSUPPORTED_AUDIO_DEMUXER		= 0x0500,
	SMF_ERROR_UNSUPPORTED_AUDIO_MUXER		= 0x0501,
	SMF_ERROR_UNSUPPORTED_AUDIO_DECODER		= 0x0502,
	SMF_ERROR_UNSUPPORTED_AUDIO_ENCODER		= 0x0503,
	SMF_ERROR_UNSUPPORTED_AUDIO_PROCESSER	= 0x0504,
	SMF_ERROR_UNSUPPORTED_AUDIO_SOURCE		= 0x0505,
	SMF_ERROR_UNSUPPORTED_AUDIO_SINK		= 0x0506,
	SMF_ERROR_UNSUPPORTED_AUDIO_FILTER		= 0x0507,
	SMF_ERROR_UNSUPPORTED_AUDIO_BITS		= 0x0508,
	SMF_ERROR_UNSUPPORTED_AUDIO_CHANNEL		= 0x0509,
	SMF_ERROR_UNRECOGNIZED_AUDIO_FILE		= 0x0510,
	
	//
	SMF_ERROR_DEMUX							= 0x0600,
	SMF_ERROR_DEMUX_HEADER_FAIL				= 0x0601,
	SMF_ERROR_DEMUX_SYNC_FAIL				= 0x0602,
	SMF_ERROR_DEMUX_PARSE_FRAME_FAIL		= 0x0603,
	//
	SMF_ERROR_DECODE						= 0x0700,
	SMF_ERROR_DECODE_FATAL					= 0x0700 | SMF_ERROR_MASK_FATAL,
	SMF_ERROR_DECODE_FAIL					= 0x0701,
	SMF_ERROR_DECODE_BAD_EXTRA				= 0x0702,
	SMF_ERROR_DECODE_BAD_PARAM				= 0x0706,
	SMF_ERROR_DECODE_BAD_FRAME				= 0x0703,
	SMF_ERROR_DECODE_LOST_FRAME_SYNC		= 0x0704,				
	SMF_ERROR_DECODE_OUT_OF_MEMORY			= 0x0705,	
	//
	SMF_ERROR_ENCODE						= 0x0800,
	SMF_ERROR_ENCODE_FATAL					= 0x0800 | SMF_ERROR_MASK_FATAL,
	SMF_ERROR_ENCODE_OPEN					= 0x0810,
	SMF_ERROR_ENCODE_OPEN_INVALID_PARAM		= 0x0811,
	//
	SMF_ERROR_REALLOC_INPUT_BUFF			= 0x0840,
	SMF_ERROR_REALLOC_OUTPUT_BUFF			= 0x0841,
	//
	SMF_ERROR_END							= 0x0fff,
};

#endif
