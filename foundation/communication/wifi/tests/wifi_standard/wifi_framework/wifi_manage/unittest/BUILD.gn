# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")

################################################################################

SUBSYSTEM_DIR = "//foundation/communication/wifi"
module_output_path = "wifi_standard/manager_test"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//utils/native/base/include",
    "$SUBSYSTEM_DIR/tests/wifi_standard/wifi_framework/wifi_manage/unittest",
  ]
}

ohos_unittest("manager_unittest") {
  module_out_path = module_output_path
  sources = [
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/config/wifi_config_file_spec.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/config/wifi_settings.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/utils/wifi_common_event_helper.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/wifi_permission_helper.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/common/wifi_permission_utils.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_auth_center.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_config_center.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_internal_event_dispatcher.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_manager.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_net_agent.cpp",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_service_manager.cpp",
    "wifi_auth_center_test.cpp",
    "wifi_config_center_test.cpp",
    "wifi_internal_event_dispatcher_test.cpp",
    "wifi_manage_test.cpp",
    "wifi_manager_service_test.cpp",
    "wifi_service_manager_test.cpp",
  ]

  include_dirs = [
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/common",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/include",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/net_helper",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/utils",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/log",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/common/config",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_sta",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_scan",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_ap",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_p2p",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/wifi_aware",
    "$SUBSYSTEM_DIR/interfaces/innerkits/native_cpp/wifi_standard/interfaces",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client/idl_interface",
    "$SUBSYSTEM_DIR/services/wifi_standard/ipc_framework/cRPC/include",
    "//utils/native/base/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//base/notification/ces_standard/cesfwk/innerkits/include",
    "//base/notification/ces_standard/cesfwk/kits/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/aafwk/intent/interfaces/innerkits/base/include",
    "//foundation/appexecfwk/adapter/interfaces/innerkits/appexecfwk_base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
    "//foundation/communication/netmanager_base/services/netmanagernative/include/netsys",
    "//foundation/communication/wifi/utils/inc",
  ]

  deps = [
    "$SUBSYSTEM_DIR/services/wifi_standard/ipc_framework/cRPC:crpc_client",
    "$SUBSYSTEM_DIR/services/wifi_standard/wifi_framework/wifi_manage/idl_client:wifi_idl_client",
    "${aafwk_path}/interfaces/innerkits/base:base",
    "${aafwk_path}/interfaces/innerkits/want:want",
    "//foundation/communication/wifi/utils/src:wifi_utils",
    "//utils/native/base:utils",
  ]

  ldflags = [
    "-fPIC",
    "--coverage",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "ces_standard:cesfwk_innerkits",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "netmanager_base:net_conn_manager_if",
  ]
  configs = [ ":module_private_config" ]

  part_name = "wifi_standard"
  subsystem_name = "communication"
  testonly = true
}

group("unittest") {
  testonly = true
  deps = [ ":manager_unittest" ]
}
