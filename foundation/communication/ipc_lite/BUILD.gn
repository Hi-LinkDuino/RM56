# Copyright (c) 2020 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/lite/config/component/lite_component.gni")
import("//build/lite/ndk/ndk.gni")

if (ohos_kernel_type == "liteos_a") {
  shared_library("liteipc_adapter") {
    sources = [
      "frameworks/liteipc/src/liteipc_adapter.c",
      "frameworks/liteipc/src/serializer.c",
    ]
    cflags = [ "-fPIC" ]
    cflags += [ "-Wall" ]
    ldflags = [ "-lrt" ]
    cflags_cc = cflags
    public_configs = [ ":liteipc_external_library_config" ]
    include_dirs = [
      "frameworks/liteipc/include",
      "//third_party/bounds_checking_function/include",
    ]
    public_deps = [ "//third_party/bounds_checking_function/:libsec_shared" ]
    deps = [ "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared" ]
  }
  config("liteipc_external_library_config") {
    include_dirs = [
      "//foundation/communication/ipc_lite/interfaces/kits",
      "//utils/native/lite/include",
    ]
  }
} else {
  shared_library("liteipc_adapter") {
    sources = [
      "frameworks/liteipc/src/serializer.c",
      "frameworks/liteipc_linux/src/liteipc_adapter.c",
    ]
    public_configs = [ ":liteipc_external_library_config" ]
    include_dirs = [
      "frameworks/liteipc_linux/include",
      "frameworks/liteipc/include",
      "//third_party/bounds_checking_function/include",
    ]
    ldflags = [
      "-lstdc++",
      "-lpthread",
      "-lrt",
    ]
    deps = [ "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared" ]
    public_deps = [ "//third_party/bounds_checking_function/:libsec_shared" ]
    defines = [ "LITE_LINUX_BINDER_IPC" ]
    configs -= [ "//build/lite/config:clang_opt" ]
  }
  config("liteipc_external_library_config") {
    include_dirs = [
      "//foundation/communication/ipc_lite/interfaces/kits",
      "//utils/native/lite/include",
    ]
  }
}

lite_component("liteipc") {
  features = [ ":liteipc_adapter" ]
}

ndk_lib("liteipc_ndk") {
  lib_extension = ".so"
  deps = [ ":liteipc_adapter" ]
  head_files = [ "//foundation/communication/ipc_lite/interfaces/kits" ]
}
