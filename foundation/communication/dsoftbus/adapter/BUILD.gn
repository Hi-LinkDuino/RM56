# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  if (ohos_kernel_type == "liteos_m") {
    hilog_lite_include_path =
        "//base/hiviewdfx/hilog_lite/interfaces/native/kits/hilog_lite"
  } else {
    hilog_lite_include_path =
        "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits"
  }
  config("dsoftbus_adapter_common_interface") {
    include_dirs = [
      "$softbus_adapter_common/include",
      "$softbus_adapter_common/include/OS_adapter_define/linux",
      "$softbus_adapter_config/spec_config",
      "$dsoftbus_root_path/core/common/include",
      "$hilog_lite_include_path",
    ]
  }

  common_include = [
    "$dsoftbus_root_path/interfaces/kits",
    "$dsoftbus_root_path/interfaces/kits/common",
    "//utils/native/base/include",
    "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
  ]

  if (ohos_kernel_type == "liteos_m") {
    static_library("softbus_adapter") {
      include_dirs = common_include
      include_dirs += [ "//kernel/liteos_m/kal/cmsis" ]
      if (board_name == "hispark_pegasus") {
        include_dirs +=
            [ "$hispark_pegasus_sdk_path/third_party/lwip_sack/include" ]
        defines = [ "HISPARK_PEGASUS_USE_NETIF_GET_ADDR" ]
      }
      cflags = [ "-Wall" ]
      sources = [
        "$softbus_adapter_common/bus_center/platform/bus_center_adapter.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_socket.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_thread.c",
        "$softbus_adapter_common/kernel/liteos_m/lnn_ip_utils_adapter.c",
        "$softbus_adapter_common/kernel/liteos_m/softbus_adapter_file.c",
        "$softbus_adapter_common/kernel/liteos_m/softbus_adapter_mem.c",
        "$softbus_adapter_common/kernel/liteos_m/softbus_adapter_timer.c",
        "$softbus_adapter_common/log/softbus_adapter_log.c",
        "$softbus_adapter_common/mbedtls/softbus_adapter_crypto.c",
        "$softbus_adapter_config/spec_config/softbus_config_adapter.c",
      ]
      deps = [
        "//base/hiviewdfx/hilog_lite/frameworks/mini:hilog_lite",
        "//third_party/mbedtls",
      ]
      public_configs = [ ":dsoftbus_adapter_common_interface" ]
    }
  } else {
    shared_library("softbus_adapter") {
      include_dirs = common_include
      cflags = [
        "-Wall",
        "-Werror",
        "-fPIC",
        "-fno-builtin",
        "-std=c99",
      ]
      cflags_cc = [ "-fPIC" ]
      sources = [
        "$softbus_adapter_common/bus_center/platform/bus_center_adapter.c",
        "$softbus_adapter_common/kernel/liteos_a/lnn_ip_utils_adapter.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_file.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_mem.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_socket.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_thread.c",
        "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_timer.c",
        "$softbus_adapter_common/log/softbus_adapter_log.c",
        "$softbus_adapter_common/mbedtls/softbus_adapter_crypto.c",
        "$softbus_adapter_config/spec_config/softbus_config_adapter.c",
      ]
      deps = [
        "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
        "//base/startup/syspara_lite/frameworks/parameter/src:sysparam",
        "//third_party/bounds_checking_function:libsec_shared",
      ]
      deps += [ "//third_party/mbedtls" ]
      public_configs = [ ":dsoftbus_adapter_common_interface" ]
    }
  }
} else {
  config("config_adapter_common") {
    include_dirs = [
      "$softbus_adapter_common/include",
      "$softbus_adapter_common/include/OS_adapter_define/linux",
      "$dsoftbus_standard_feature_product_config_path/spec_config",
      "$dsoftbus_root_path/core/common/include",
    ]
  }

  ohos_shared_library("softbus_adapter") {
    include_dirs = [
      "$dsoftbus_root_path/interfaces/kits",
      "$dsoftbus_root_path/interfaces/kits/common",
      "//base/startup/syspara_lite/interfaces/innerkits/native/syspara/include",
      "//utils/native/base/include",
    ]
    sources = [
      "$dsoftbus_standard_feature_product_config_path/spec_config/softbus_config_adapter.c",
      "$softbus_adapter_common/bus_center/platform/bus_center_adapter.c",
      "$softbus_adapter_common/kernel/liteos_a/lnn_ip_utils_adapter.c",
      "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_file.c",
      "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_mem.c",
      "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_socket.c",
      "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_thread.c",
      "$softbus_adapter_common/kernel/liteos_a/softbus_adapter_timer.c",
      "$softbus_adapter_common/log/softbus_adapter_log.c",
      "$softbus_adapter_common/mbedtls/softbus_adapter_crypto.c",
    ]
    public_deps = [
      "//base/startup/syspara_lite/interfaces/innerkits/native/syspara:syspara",
      "//third_party/bounds_checking_function:libsec_static",
      "//third_party/mbedtls",
      "//utils/native/base:utils",
    ]
    public_configs = [ ":config_adapter_common" ]
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
