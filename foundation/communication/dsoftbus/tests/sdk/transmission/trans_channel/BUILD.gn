# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

trans_sdk_test_common_src = [
  "tcp_direct/unittest/trans_session_test.cpp",
  "tcp_direct/unittest/trans_tcp_direct_test.cpp",
  "udp/stream/trans_sdk_stream_test.cpp",
]
trans_sdk_test_common_inc = [
  "$dsoftbus_root_path/core/common/include",
  "$dsoftbus_root_path/interfaces/inner_kits/transport",
  "$dsoftbus_root_path/interfaces/kits/transport",
]
trans_sdk_test_common_deps = [
  "$dsoftbus_root_path/core/common:softbus_utils",
  "$dsoftbus_root_path/sdk:softbus_client",
]

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//build/lite/config/test.gni")

  if (ohos_build_type == "debug") {
    unittest("TransSdkTest") {
      output_extension = "bin"
      output_dir = "$root_out_dir/test/unittest/dsoftbus"
      sources = trans_sdk_test_common_src
      include_dirs = trans_sdk_test_common_inc
      include_dirs += [
        "$dsoftbus_root_path/core/common/softbus_property/include",
        "$softbus_adapter_config/spec_config",
      ]
      deps = trans_sdk_test_common_deps
      deps += [ "$hilog_lite_deps_path" ]
    }
  }
} else {
  import("//build/test.gni")

  module_output_path = "dsoftbus_standard/transmission"
  ohos_unittest("TransSdkTest") {
    module_out_path = module_output_path
    sources = trans_sdk_test_common_src
    include_dirs = trans_sdk_test_common_inc
    deps = trans_sdk_test_common_deps
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }
  }
  group("unittest") {
    testonly = true
    deps = [ ":TransSdkTest" ]
  }
}
