# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import(
    "//foundation/communication/dsoftbus/core/connection/common/conn_common.gni")
import(
    "//foundation/communication/dsoftbus/core/transmission/common/trans_common.gni")
import("//foundation/communication/dsoftbus/dsoftbus.gni")

common_utils_src = [
  "bitmap/softbus_bitmap.c",
  "network/softbus_network_utils.c",
  "json_utils/softbus_json_utils.c",
  "log/softbus_log.c",
  "message_handler/message_handler.c",
  "queue/softbus_queue.c",
  "security/sequence_verification/softbus_sequence_verification.c",
  "softbus_property/softbus_feature_config.c",
  "utils/softbus_utils.c",
]

if (defined(ohos_lite)) {
  if (ohos_kernel_type == "liteos_m") {
    hilog_lite_include_path =
        "//base/hiviewdfx/hilog_lite/interfaces/native/kits/hilog_lite"
    diff_deps = [
      "//base/hiviewdfx/hilog_lite/frameworks/mini:hilog_lite",
      "//build/lite/config/component/cJSON:cjson_static",
    ]
    build_type = "static_library"
  } else {
    hilog_lite_include_path =
        "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits"
    diff_deps = [
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//build/lite/config/component/cJSON:cjson_shared",
      "//third_party/bounds_checking_function:libsec_shared",
    ]
    build_type = "shared_library"
  }
  config("dsoftbus_utils_interface") {
    include_dirs = [
      "$dsoftbus_root_path/core/common/include",
      "$softbus_adapter_common/include",
      "$hilog_lite_include_path",
    ]
    include_dirs += conn_common_inc + trans_common_inc
    cflags = [
      "-ffunction-sections",
      "-fdata-sections",
      "-Os",
    ]
    cflags_cc = cflags
  }

  target(build_type, "softbus_utils") {
    include_dirs = [ "$dsoftbus_root_path/interfaces/kits/common" ]
    include_dirs += conn_common_inc + trans_common_inc
    sources = common_utils_src
    sources += conn_common_src + trans_common_src
    cflags = [
      "-Wall",
      "-fPIC",
      "-std=c99",
    ]
    if (ohos_kernel_type == "liteos_m") {
      defines = [ "SOFTBUS_MINI_SYSTEM" ]
    } else {
      defines = [ "DEFAULT_STORAGE_PATH=\"/usr\"" ]
      defines += [ "SOFTBUS_SMALL_SYSTEM" ]
    }
    deps = [ "$dsoftbus_root_path/adapter:softbus_adapter" ]
    deps += diff_deps
    public_configs = [ ":dsoftbus_utils_interface" ]
  }
} else {
  config("dsoftbus_utils_interface_L2") {
    include_dirs = [
      "$dsoftbus_root_path/core/common/include",
      "$softbus_adapter_common/include",
    ]
    include_dirs += conn_common_inc + trans_common_inc
  }
  ohos_shared_library("softbus_utils") {
    include_dirs = [
      "$dsoftbus_root_path/interfaces/kits/common",
      "//third_party/cJSON",
    ]
    include_dirs += conn_common_inc + trans_common_inc
    sources = common_utils_src
    sources += conn_common_src + trans_common_src
    defines = [ "DEFAULT_STORAGE_PATH=\"/data/data\"" ]
    defines += [ "SOFTBUS_STANDARD_SYSTEM" ]

    if (is_asan) {
      defines += [ "ASAN_BUILD" ]
    }

    public_configs = [ ":dsoftbus_utils_interface_L2" ]
    public_deps = [
      "$dsoftbus_root_path/adapter:softbus_adapter",
      "//third_party/cJSON:cjson_static",
      "//utils/native/base:utils",
      "//utils/native/base:utilsecurec_shared",
    ]
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
