# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

template("preview_entrance_source") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    part_name = ace_engine_part
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc
    configs = [ "$ace_root:ace_config" ]

    sources = [
      "ace_ability.cpp",
      "ace_application_info.cpp",
      "ace_container.cpp",
      "ace_resource_register.cpp",
      "flutter_ace_view.cpp",
      "subwindow_preview.cpp",
    ]

    deps = [
      "$ace_flutter_engine_root/glfw:flutter_glfw_preview_$platform",
      "$ace_flutter_engine_root/skia:ace_skia_$platform",
      "$ace_napi:ace_napi",
      "$ace_root/frameworks/core/components/theme:build_theme_code",
    ]

    if (!is_cross_platform_build) {
      if (platform == "windows") {
        defines -= [ "UNICODE" ]
        include_dirs = [ "//utils/native/base/include" ]
        deps += [ "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr_win(${current_toolchain})" ]
        cflags_cc += [ "-DNONLS" ]
      }

      if (platform == "mac") {
        include_dirs = [ "//utils/native/base/include" ]
        deps += [ "//base/global/resmgr_standard/frameworks/resmgr:global_resmgr_mac(${current_toolchain})" ]
      }
    }
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  if (platform == "windows" || platform == "mac") {
    preview_entrance_source("ace_preview_entrance_" + item.name) {
      platform = item.name
      defines = []
      cflags_cc = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }

      if (defined(config.defines)) {
        defines = config.defines
      }

      if (defined(config.cflags_cc)) {
        cflags_cc = config.cflags_cc
      }
    }
  }
}
