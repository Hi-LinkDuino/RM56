# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

config("v8_engine_config") {
  include_dirs = [
    "//third_party/v8/include",
    "//foundation/ace/napi",
  ]
}

template("declarative_js_engine_v8") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    if (target_cpu == "arm64") {
      defines += [ "APP_USE_ARM64" ]
    } else if (target_cpu == "arm") {
      defines += [ "APP_USE_ARM" ]
    }

    public_configs = [
      "$ace_root:ace_config",
      ":v8_engine_config",
      "$v8_root:v8_header_features",
    ]

    sources = [
      "functions/v8_function.cpp",
      "v8_declarative_engine.cpp",
      "v8_declarative_group_js_bridge.cpp",
      "v8_function_destroy_helper.cpp",
      "v8_js_matrix4.cpp",
      "v8_module_manager.cpp",
      "v8_object_template.cpp",
      "v8_types.cpp",
      "v8_utils.cpp",
      "v8_view_register.cpp",
    ]

    deps = []
    if (use_shared_v8) {
      deps += [ "$v8_root:v8_shared" ]
    } else {
      deps += [
        "$v8_root:ace_libicu",
        "$v8_root:v8",
        "$v8_root:v8_libbase",
        "$v8_root:v8_libplatform",
      ]
    }

    if (defined(config.use_build_in_js_engine) &&
        config.use_build_in_js_engine) {
      deps +=
          [ "$ace_root/frameworks/bridge/common/utils/v8:ace_v8_helper_static" ]
    } else {
      deps += [ "$ace_root/frameworks/bridge/common/utils/v8:ace_v8_helper" ]
    }

    public_deps = [ "//foundation/ace/napi:ace_napi" ]
    deps += [ "//foundation/ace/napi:ace_napi_v8" ]
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  engine_config = {
  }
  engine_config = item.config
  support_engines = []
  support_engines = engine_config.js_engines
  foreach(engine, support_engines) {
    if (engine.engine_name == "v8") {
      declarative_js_engine_v8("declarative_js_engine_bridge_v8_$platform") {
        defines = engine.engine_defines
        config = {
        }

        if (defined(item.config)) {
          config = item.config
        }
        if (defined(config.defines)) {
          defines += config.defines
        }
      }
    }
  }
}
