# Copyright (c) 2020 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/lite/config/component/lite_component.gni")
import("//build/lite/ndk/ndk.gni")

generate_notice_file("bundle_notice_file") {
  module_name = "bundle"
  module_source_dir_list = [
    "//third_party/bounds_checking_function",
    "//third_party/cJSON",
  ]
}

lite_component("appexecfwk_kits_lite") {
  features = [ ":bundle" ]
}

lite_library("bundle") {
  if (ohos_kernel_type == "liteos_m") {
    target_type = "static_library"

    sources = [
      "src/ability_info.cpp",
      "src/ability_info_utils.cpp",
      "src/bundle_info.cpp",
      "src/bundle_info_utils.cpp",
      "src/element_name.cpp",
      "src/module_info.cpp",
      "src/module_info_utils.cpp",
      "src/slite/bundle_manager.cpp",
      "src/slite/bundle_manager_inner.cpp",
      "src/slite/bundlems_slite_client.cpp",
    ]

    public_deps = [
      "${aafwk_lite_path}/frameworks/want_lite:want",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_static",
    ]

    include_dirs = [
      "${appexecfwk_lite_path}/services/bundlemgr_lite/include",
      "${appexecfwk_lite_path}/interfaces/innerkits/bundlemgr_lite/slite",
      "${appexecfwk_lite_path}/interfaces/innerkits/bundlemgr_lite",
      "${appexecfwk_lite_path}/interfaces/kits/bundle_lite/slite",
      "${appexecfwk_lite_path}/interfaces/kits/bundle_lite",
      "${appexecfwk_lite_path}/utils/bundle_lite",
      "${appexecfwk_lite_path}/frameworks/bundle_lite/include",
      "//base/security/permission/interfaces/kits/permission_lite",
      "//base/security/permission/services/permission_lite/pms/include",
      "${aafwk_lite_path}/frameworks/want_lite/include",
      "${aafwk_lite_path}/interfaces/kits/want_lite",
      "${aafwk_lite_path}/interfaces/kits/ability_lite/slite",
      "${aafwk_lite_path}/interfaces/innerkits/abilitymgr_lite",
      "//foundation/communication/ipc_lite/interfaces/kits",
      "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
      "//foundation/distributedschedule/samgr_lite/interfaces/kits/registry",
      "//third_party/bounds_checking_function/include",
      "//utils/native/lite/include",
      "//utils/native/lite/memory/include",
      "//third_party/cJSON",
    ]
  } else {
    target_type = "shared_library"

    sources = [
      "src/ability_info.cpp",
      "src/ability_info_utils.cpp",
      "src/bundle_callback.cpp",
      "src/bundle_callback_utils.cpp",
      "src/bundle_info.cpp",
      "src/bundle_info_utils.cpp",
      "src/bundle_manager.cpp",
      "src/bundle_self_callback.cpp",
      "src/convert_utils.cpp",
      "src/element_name.cpp",
      "src/module_info.cpp",
      "src/module_info_utils.cpp",
      "src/token_generate.cpp",
    ]

    deps = [
      "${aafwk_lite_path}/frameworks/want_lite:want",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//base/security/permission/services/permission_lite/pms_client:pms_client",
    ]

    include_dirs = [
      "include",
      "//base/security/permission/interfaces/kits/permission_lite",
      "//base/security/permission/services/permission_lite/pms/include",
      "${aafwk_lite_path}/frameworks/want_lite/include",
      "${aafwk_lite_path}/interfaces/kits/want_lite",
      "${aafwk_lite_path}/interfaces/innerkits/abilitymgr_lite",
      "${appexecfwk_lite_path}/interfaces/innerkits/bundlemgr_lite",
      "${appexecfwk_lite_path}/interfaces/kits/bundle_lite",
      "${appexecfwk_lite_path}/utils/bundle_lite",
      "//foundation/communication/ipc_lite/interfaces/kits",
      "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
      "//foundation/distributedschedule/samgr_lite/interfaces/kits/registry",
      "//third_party/bounds_checking_function/include",
      "//utils/native/lite/include",
      "//third_party/cJSON",
    ]

    defines = [ "OHOS_APPEXECFWK_BMS_BUNDLEMANAGER" ]
  }

  cflags = [
    "-fPIC",
    "-Wall",
    "-Wno-format",
  ]
  cflags_cc = cflags
}

ndk_lib("bundle_notes") {
  lib_extension = ".so"
  deps = [ ":bundle" ]
  head_files = [ "${appexecfwk_lite_path}/interfaces/kits/bundle_lite" ]
}
