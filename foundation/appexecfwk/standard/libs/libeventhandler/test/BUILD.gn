# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../appexecfwk.gni")
import("../../../libs/libeventhandler/lib_event_handler_sources.gni")

config("libeventhandler_test_private_config") {
  defines = event_handler_log_domain_defines

  configs = [ "${libs_path}/libeventhandler:libeventhandler_config" ]
}

module_output_path = "appexecfwk_standard/libeventhandler"

ohos_unittest("LibEventHandlerCheckTest") {
  module_out_path = module_output_path

  sources = lib_event_handler_sources

  sources += [ "unittest/lib_event_handler_checker_test.cpp" ]

  configs = [ ":libeventhandler_test_private_config" ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "hichecker_native:libhichecker",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

ohos_unittest("LibEventHandlerEventQueueTest") {
  module_out_path = module_output_path

  sources = lib_event_handler_sources

  sources += [ "unittest/lib_event_handler_event_queue_test.cpp" ]

  configs = [ ":libeventhandler_test_private_config" ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "hichecker_native:libhichecker",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

ohos_unittest("LibEventHandlerEventTest") {
  module_out_path = module_output_path

  sources = lib_event_handler_sources

  sources += [ "unittest/lib_event_handler_event_test.cpp" ]

  configs = [ ":libeventhandler_test_private_config" ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "hichecker_native:libhichecker",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

ohos_unittest("LibEventHandlerEventRunnerTest") {
  module_out_path = module_output_path

  sources = lib_event_handler_sources

  sources += [ "unittest/lib_event_handler_event_runner_test.cpp" ]

  configs = [ ":libeventhandler_test_private_config" ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "hichecker_native:libhichecker",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

ohos_unittest("LibEventHandlerTraceTest") {
  module_out_path = module_output_path

  sources = lib_event_handler_sources

  sources += [ "unittest/lib_event_handler_trace_test.cpp" ]

  configs = [ ":libeventhandler_test_private_config" ]

  deps = [ "//third_party/googletest:gtest_main" ]

  external_deps = [
    "hichecker_native:libhichecker",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
  ]
}

group("unittest") {
  testonly = true

  deps = [
    ":LibEventHandlerCheckTest",
    ":LibEventHandlerEventQueueTest",
    ":LibEventHandlerEventRunnerTest",
    ":LibEventHandlerEventTest",
    ":LibEventHandlerTraceTest",
  ]
}
