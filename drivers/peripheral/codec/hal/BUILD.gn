# Copyright (c) 2022 Shenzhen Kaihong DID Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")

ohos_shared_library("libcodec_hdi_omx_server") {
  include_dirs = [
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/codec/hal/include",
    "//third_party/openmax/api/1.1.2",
  ]
  sources = [
    "src/codec_callback_type_proxy.c",
    "src/codec_component_capability_config.c",
    "src/codec_component_type_driver.c",
    "src/codec_component_type_stub.c",
    "src/codec_config_parser.c",
    "src/codec_types.c",
  ]

  if (is_standard_system) {
    external_deps = [
      "device_driver_framework:libhdf_host",
      "device_driver_framework:libhdf_ipc_adapter",
      "device_driver_framework:libhdf_utils",
      "device_driver_framework:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "utils_base:utils",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "codec_device_driver"
}

ohos_shared_library("libcodec_hdi_omx_client") {
  include_dirs = [
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/codec/hal/include",
    "//third_party/openmax/api/1.1.2",
  ]
  sources = [
    "src/codec_callback_type_stub.c",
    "src/codec_component_manager_proxy.c",
    "src/codec_component_type_proxy.c",
    "src/codec_types.c",
  ]

  if (is_standard_system) {
    external_deps = [
      "device_driver_framework:libhdf_host",
      "device_driver_framework:libhdf_ipc_adapter",
      "device_driver_framework:libhdf_utils",
      "device_driver_framework:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "utils_base:utils",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "codec_device_driver"
}

ohos_shared_library("libcodec_hdi_omx_service_impl") {
  include_dirs = [
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/codec/hal/include",
    "//third_party/openmax/api/1.1.2",
  ]
  sources = [ "src/codec_component_type_service.c" ]

  if (is_standard_system) {
    external_deps = [
      "device_driver_framework:libhdf_host",
      "device_driver_framework:libhdf_ipc_adapter",
      "device_driver_framework:libhdf_utils",
      "device_driver_framework:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "utils_base:utils",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "codec_device_driver"
}

ohos_shared_library("libcodec_hdi_omx_callback_type_service_impl") {
  include_dirs = [
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/peripheral/codec/interfaces/include",
    "//drivers/peripheral/codec/hal/include",
    "//third_party/openmax/api/1.1.2",
  ]
  sources = [ "src/codec_callback_type_service.c" ]

  if (is_standard_system) {
    external_deps = [
      "device_driver_framework:libhdf_host",
      "device_driver_framework:libhdf_ipc_adapter",
      "device_driver_framework:libhdf_utils",
      "device_driver_framework:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "utils_base:utils",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "codec_device_driver"
}

group("codec_hdi_omx") {
  deps = [
    ":libcodec_hdi_omx_callback_type_service_impl",
    ":libcodec_hdi_omx_client",
    ":libcodec_hdi_omx_server",
    ":libcodec_hdi_omx_service_impl",
  ]
}
