import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/camera/hal/camera.gni")

config("pipe_config") {
  visibility = [ ":*" ]

  cflags_cc = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-Wno-error",
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-DCOLORSPACE=\"videoconvert\"",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-unused-variable",
    "-Wno-unused-label",
    "-Wno-implicit-function-declaration",
    "-Wno-format",
    "-Wno-int-conversion",
    "-Wno-unused-function",
    "-Wno-thread-safety-attributes",
    "-Wno-inconsistent-missing-override",
    "-fno-rtti",
    "-fno-exceptions",
    "-ffunction-sections",
    "-fdata-sections",
  ]
}

ohos_shared_library("camera_pipeline_core") {
  sources = [
    "$camera_path/adapter/platform/v4l2/src/pipeline_core/nodes/uvc_node/uvc_node.cpp",
    "$camera_path/adapter/platform/v4l2/src/pipeline_core/nodes/v4l2_source_node/v4l2_source_node.cpp",
    "$camera_path/pipeline_core/host_stream/src/host_stream_impl.cpp",
    "$camera_path/pipeline_core/host_stream/src/host_stream_mgr_impl.cpp",
    "$camera_path/pipeline_core/ipp/src/algo_plugin.cpp",
    "$camera_path/pipeline_core/ipp/src/algo_plugin_manager.cpp",
    "$camera_path/pipeline_core/ipp/src/ipp_algo_parser.cpp",
    "$camera_path/pipeline_core/ipp/src/ipp_node.cpp",
    "$camera_path/pipeline_core/ipp/src/offline_pipeline.cpp",
    "$camera_path/pipeline_core/ipp/src/offline_pipeline_manager.cpp",
    "$camera_path/pipeline_core/nodes/src/dummy_node/dummy_node.cpp",
    "$camera_path/pipeline_core/nodes/src/fork_node/fork_node.cpp",
    "$camera_path/pipeline_core/nodes/src/merge_node/merge_node.cpp",
    "$camera_path/pipeline_core/nodes/src/node_base/node_base.cpp",
    "$camera_path/pipeline_core/nodes/src/sensor_node/sensor_node.cpp",
    "$camera_path/pipeline_core/nodes/src/sink_node/sink_node.cpp",
    "$camera_path/pipeline_core/nodes/src/source_node/source_node.cpp",
    "$camera_path/pipeline_core/pipeline_impl/src/builder/stream_pipeline_builder.cpp",
    "$camera_path/pipeline_core/pipeline_impl/src/dispatcher/stream_pipeline_dispatcher.cpp",
    "$camera_path/pipeline_core/pipeline_impl/src/parser/config_parser.cpp",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/config.c",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/params.c",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy/stream_pipeline_strategy.cpp",
    "$camera_path/pipeline_core/pipeline_impl/src/stream_pipeline_core.cpp",
    "$camera_path/pipeline_core/src/pipeline_core.cpp",
  ]
  include_dirs = [
    "//utils/native/base/include",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
    "$camera_path/../interfaces/include",
    "$camera_path/../interfaces/hdi_ipc",
    "$camera_path/include",
    "$camera_path/hdi_impl",
    "$camera_path/hdi_impl/camera_host/include",
    "$camera_path/hdi_impl/camera_device/include",
    "$camera_path/hdi_impl/stream_operator/include",
    "$camera_path/hdi_impl/include",
    "$camera_path/device_manager",
    "$camera_path/device_manager/include",
    "$camera_path/pipeline_core",
    "$camera_path/pipeline_core/host_stream/include",
    "$camera_path/pipeline_core/utils",
    "$camera_path/pipeline_core/nodes/include",
    "$camera_path/pipeline_core/nodes/src/sensor_node",
    "$camera_path/pipeline_core/nodes/src/node_base",
    "$camera_path/pipeline_core/nodes/src/sink_node",
    "$camera_path/pipeline_core/nodes/src/source_node",
    "$camera_path/pipeline_core/nodes/src/merge_node",
    "$camera_path/pipeline_core/nodes/src/dummy_node",
    "$camera_path/pipeline_core/pipeline_impl/include",
    "$camera_path/pipeline_core/pipeline_impl/src",
    "$camera_path/pipeline_core/include",
    "$camera_path/pipeline_core/pipeline_impl/src/builder",
    "$camera_path/pipeline_core/pipeline_impl/src/dispatcher",
    "$camera_path/pipeline_core/pipeline_impl/src/parser",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy/config",
    "$camera_path/pipeline_core/ipp/include",
    "$camera_path/utils/event",
    "$camera_path/adapter/platform/v4l2/src/device_manager/include",
    "$camera_device_name_path/camera/include/device_manager",
    "$camera_path/adapter/platform/v4l2/src/pipeline_core/nodes/v4l2_source_node",
    "$camera_path/adapter/platform/v4l2/src/pipeline_core/nodes/uvc_node",
    "//drivers/peripheral/camera/hal/adapter/platform/v4l2/src/driver_adapter/include/",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata/include",

    # hcs parser
    "//system/core/include/cutils",
  ]

  deps = [
    "$camera_path/buffer_manager:camera_buffer_manager",
    "$camera_path/device_manager:camera_device_manager",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata:metadata",
  ]

  if (is_standard_system) {
    external_deps = [
      "device_driver_framework:libhdf_utils",
      "graphic_standard:surface",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
      "utils_base:utils",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "ipc:ipc_single" ]

  public_configs = [ ":pipe_config" ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "camera_device_driver"
}

config("example_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wno-error",
    "-Wno-unused-function",
    "-Wno-unused-parameter",
  ]
}

ohos_shared_library("camera_ipp_algo_example") {
  sources = [ "$camera_device_name_path/camera/src/pipeline_core/ipp_algo_example/ipp_algo_example.c" ]

  include_dirs = [ "$camera_path/pipeline_core/ipp/include" ]
  external_deps = [ "utils_base:utils" ]
  public_configs = [ ":example_config" ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "camera_device_driver"
}
