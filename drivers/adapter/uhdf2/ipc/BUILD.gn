# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")

config("libhdf_ipc_adapter_pub_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "//utils/native/base/include",
    "//drivers/framework/include",
    "//drivers/framework/include/osal",
    "//drivers/framework/include/utils",
    "//drivers/framework/utils/include",
    "//drivers/framework/core/adapter/syscall/include",
    "//drivers/framework/core/adapter/vnode/include",
    "//drivers/framework/core/shared/include",
    "//drivers/framework/include/core/",
    "//drivers/adapter/uhdf2/shared/include",
    "include",
  ]
}
if (defined(ohos_lite)) {
  group("libhdf_ipc_adapter") {
    deps = []
  }
} else {
  ohos_shared_library("libhdf_ipc_adapter") {
    include_dirs = []

    public_configs = [ ":libhdf_ipc_adapter_pub_config" ]

    sources = [
      # "src/hdf_parcel_adapter.cpp",
      "src/hdf_remote_adapter.cpp",
      "src/hdf_remote_service.c",
      "src/hdf_sbuf_impl_hipc.cpp",

      # "$hdf_uhdf_path/shared/src/hdf_parcel.c",
    ]

    deps = [ "$hdf_uhdf_path/utils:libhdf_utils" ]

    if (is_standard_system) {
      external_deps = [
        "hiviewdfx_hilog_native:libhilog",
        "ipc:ipc_single",
        "samgr_standard:samgr_proxy",
        "utils_base:utils",
      ]
    } else {
      external_deps = [
        "hilog:libhilog",
        "ipc:ipc_single",
        "samgr:samgr_proxy",
      ]
    }

    cflags = [
      "-Wall",
      "-Wextra",
      "-Werror",
    ]

    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "device_driver_framework"
  }
}
