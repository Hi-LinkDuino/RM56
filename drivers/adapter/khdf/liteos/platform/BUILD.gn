# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/component/lite_component.gni")
import("//drivers/adapter/khdf/liteos/hdf.gni")

module_switch = defined(LOSCFG_DRIVERS_HDF_PLATFORM)
module_name = "hdf_platform"
hdf_driver(module_name) {
  sources = [
    "$HDF_FRAMEWORKS_PATH/support/platform/src/fwk/platform_common.c",
    "$HDF_FRAMEWORKS_PATH/support/platform/src/fwk/platform_device.c",
    "$HDF_FRAMEWORKS_PATH/support/platform/src/fwk/platform_event.c",
    "$HDF_FRAMEWORKS_PATH/support/platform/src/fwk/platform_manager.c",
    "$HDF_FRAMEWORKS_PATH/support/platform/src/fwk/platform_queue.c",
    "src/plat_common.c",
  ]

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_I2C)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i2c/i2c_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i2c/i2c_if.c",
      "src/i2c_dev.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_ADC)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/adc/adc_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/adc/adc_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_DAC)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/dac/dac_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/dac/dac_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_I3C)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i3c/i3c_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i3c/i3c_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_GPIO)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/gpio/gpio_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/gpio/gpio_if.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/gpio/gpio_manager.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/gpio/gpio_service.c",
      "src/gpio_dev.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_PIN)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pin/pin_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pin/pin_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_WATCHDOG)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/watchdog/watchdog_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/watchdog/watchdog_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_SPI)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/spi/spi_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/spi/spi_if.c",
      "src/spi_dev.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_PWM)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pwm/pwm_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pwm/pwm_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_HDMI)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_cec.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_common.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_ddc.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_dfm.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_dispatch.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_edid.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_event.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_frl.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_hdcp.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_hdr.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_if.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_infoframe.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_ncts.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/hdmi/hdmi_scdc.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_PCIE)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pcie/pcie_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pcie/pcie_dispatch.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/pcie/pcie_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_RTC)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/rtc/rtc_base.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/rtc/rtc_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/rtc/rtc_if.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/rtc/rtc_service.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_MIPI_DSI)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/mipi/mipi_dsi_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/mipi/mipi_dsi_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_MIPI_CSI)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/mipi/mipi_csi_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/mipi/mipi_csi_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_DMAC)) {
    sources += [ "$HDF_FRAMEWORKS_PATH/support/platform/src/dma/dmac_core.c" ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_UART)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/uart/uart_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/uart/uart_if.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/uart/uart_service.c",
      "src/uart_dev.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_I2S)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i2s/i2s_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/i2s/i2s_if.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_REGULATOR)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/regulator/regulator_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/regulator/regulator_if.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/regulator/regulator_tree_mgr.c",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_PLATFORM_TIMER)) {
    sources += [
      "$HDF_FRAMEWORKS_PATH/support/platform/src/timer/timer_core.c",
      "$HDF_FRAMEWORKS_PATH/support/platform/src/timer/timer_if.c",
    ]
  }

  public_configs = [ ":public" ]
}

config("public") {
  include_dirs = [
    "include",
    "//kernel/liteos_a/kernel/include/",
    "$HDF_FRAMEWORKS_PATH/include/core",
    "$HDF_FRAMEWORKS_PATH/core/common/include/host",
    "$HDF_FRAMEWORKS_PATH/include/platform",
    "$HDF_FRAMEWORKS_PATH/support/platform/include",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/fwk",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/adc",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/dac",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/dma",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/gpio",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/hdmi",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/i2c",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/i2s",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/i3c",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/mipi",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/pcie",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/pwm",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/pin",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/rtc",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/regulator",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/spi",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/uart",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/watchdog",
    "$HDF_FRAMEWORKS_PATH/support/platform/include/timer",
  ]
}
