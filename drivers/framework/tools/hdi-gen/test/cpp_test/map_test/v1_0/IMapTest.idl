/*
 * Copyright (c) 2021 Huawei Device Co., Ltd.
 *
 * HDF is dual licensed: you can use it either under the terms of
 * the GPL, or the BSD license, at your option.
 * See the LICENSE file in the root of this repository for complete details.
 */

package test.cpp_test.map_test.v1_0;

sequenceable test.cpp_test.types.v1_0.SequenceData;

import test.cpp_test.types.v1_0.Types;

interface IMapTest {
    MapIntByteTest([in] Map<int, byte> param1, [out] Map<int, byte> param2);

    MapIntShortTest([in] Map<int, short> param1, [out] Map<int, short> param2);

    MapIntIntTest([in] Map<int, int> param1, [out] Map<int, int> param2);

    MapIntLongTest([in] Map<int, long> param1, [out] Map<int, long> param2);

    MapIntFloatTest([in] Map<int, float> param1, [out] Map<int, float> param2);

    MapIntDoubleTest([in] Map<int, double> param1, [out] Map<int, double> param2);

    MapIntStringTest([in] Map<int, String> param1, [out] Map<int, String> param2);

    MapIntFdTest([in] Map<int, FileDescriptor> param1, [out] Map<int, FileDescriptor> param2);

    MapIntSeqTest([in] Map<int, SequenceData> param1, [out] Map<int, SequenceData> param2);

    MapIntEnumTest([in] Map<int, enum ESample> param1, [out] Map<int, enum ESample> param2);

    MapIntStructTest([in] Map<int, struct SSample> param1, [out] Map<int, struct SSample> param2);

    MapIntUnionTest([in] Map<int, union USample> param1, [out] Map<int, union USample> param2);
}