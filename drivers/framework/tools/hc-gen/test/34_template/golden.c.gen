/*
 * This is an automatically generated HDF config file. Do not modify it manually.
 */

#include "golden.h"

static const struct HdfConfigTestFooBase g_hdfConfigFooBase[];

static const uint8_t g_hcsConfigArrayTerm31[2] = {
    0x2, 0x2
};

static const uint8_t g_hcsConfigArrayTerm32[1] = {
    0x1
};

static const struct HdfConfigTestFooBase g_hdfConfigFooBase[] = {
    [0] = {
        .term1 = 0x2,
        .term2 = 0x2,
        .term3 = g_hcsConfigArrayTerm31,
        .term3Size = 2,
        .attr = {
            .term4 = 0x4,
        },
    },
    [1] = {
        .term1 = 0x2,
        .term3 = g_hcsConfigArrayTerm32,
        .term3Size = 1,
        .attr = {
            .term4 = 0x1,
        },
        .term2 = 0x2,
    },
};

static const struct HdfConfigTestRoot g_hdfConfigTestModuleRoot = {
    .module = "test",
    .fooBase = g_hdfConfigFooBase,
    .fooBaseSize = 2,
    .foo = {
        .foo1 = {
            .term1 = "world",
            .bar2_2 = { "test3" },
            .foo = &g_hdfConfigTestModuleRoot.foo,
            .bar = &g_hdfConfigTestModuleRoot.bar,
        },
        .array_oct = { 0x1, 0x2, 0x3, 0x4 },
    },
    .bar = {
    },
    .t = 0x1,
};

const struct HdfConfigTestRoot* HdfGetTestModuleConfigRoot(void)
{
    return &g_hdfConfigTestModuleRoot;
}
