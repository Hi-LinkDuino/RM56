# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//kernel/liteos_m/liteos.gni")
import("//third_party/optimized-routines/optimized-routines.gni")
import("musl.gni")

libc = "musl-c"
libm = "musl-m"

LITEOS_MENUCONFIG_H = rebase_path("$root_out_dir/config.h")

config("include") {
  include_dirs = [ "include" ]
}

static_library(libc) {
  sources = MUSL_LIBC_SRC

  include_dirs = [
    "src/include",
    "src/internal",
  ]

  include_dirs += [
    "//kernel/liteos_m/kernel/arch/include",
    "//kernel/liteos_m/kernel/include",
    "//kernel/liteos_m/utils",
  ]

  cflags = [
    "-imacros",
    "$LITEOS_MENUCONFIG_H",
  ]

  if (defined(LOSCFG_ARCH_ARM_AARCH32)) {
    if (LOSCFG_ARCH_ARM_VER == "armv7-m" || LOSCFG_ARCH_ARM_VER == "armv8-m") {
      sources -= [
        "$MUSLPORTINGDIR/src/string/strcpy.c",
        "$MUSLPORTINGDIR/src/string/strlen.c",
      ]
      sources += OPTRT_STRING_ARM_SRC_FILES_FOR_ARMV7_M
      asmflags = [ "-D__strlen_armv6t2=strlen" ]
      if (defined(LOSCFG_KERNEL_LMS)) {
        asmflags += [ "-D__strcpy_arm=__strcpy" ]
      } else {
        asmflags += [ "-D__strcpy_arm=strcpy" ]
      }
      cflags += asmflags
    }
  }

  public_configs = [ ":include" ]
}

static_library(libm) {
  sources = MUSL_LIBM_SRC

  include_dirs = [
    "src/include",
    "src/internal",
  ]

  public_configs = [ ":include" ]
}

group("kernel") {
  public_deps = [
    ":$libc",
    ":$libm",
  ]
}
