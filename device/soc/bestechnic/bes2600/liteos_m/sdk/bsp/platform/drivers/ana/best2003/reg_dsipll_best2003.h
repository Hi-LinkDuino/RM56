/***************************************************************************
 *
 * Copyright 2015-2019 BES.
 * All rights reserved. All unpublished rights reserved.
 *
 * No part of this work may be used or reproduced in any form or by any
 * means, or stored in a database or retrieval system, without prior written
 * permission of BES.
 *
 * Use of this work is governed by a license granted by BES.
 * This work contains confidential and proprietary information of
 * BES. which is protected by copyright, trade secret,
 * trademark and other intellectual property rights.
 *
 ****************************************************************************/
#ifndef __REG_DSIPLL_BEST2003_H__
#define __REG_DSIPLL_BEST2003_H__

#include "plat_types.h"

enum DSIPLL_REG_T {
    MIPIPHY_REG_00   = 0x00,
    MIPIPHY_REG_01,
    MIPIPHY_REG_02,
    MIPIPHY_REG_03,
    MIPIPHY_REG_04,
    MIPIPHY_REG_05,
    MIPIPHY_REG_06,
    MIPIPHY_REG_07,
    MIPIPHY_REG_08,
    MIPIPHY_REG_09,
    MIPIPHY_REG_0A,
    MIPIPHY_REG_0B,
    MIPIPHY_REG_0C,
    DSIPLL_REG_0D,
    DSIPLL_REG_0E,
    DSIPLL_REG_0F,
    DSIPLL_REG_10,
    DSIPLL_REG_11,
    DSIPLL_REG_12,
    DSIPLL_REG_13,
    DSIPLL_REG_14,
    DSIPLL_REG_15,
    DSIPLL_REG_16,
    DSIPLL_REG_17,
    DSIPLL_REG_18,
    DSIPLL_REG_19,
    DSIPLL_REG_1A,
};

// REG_0D
#define REG_MIPI_BBPLL_CLK_FBC_EDGE         (1 << 0)
#define REG_MIPI_BBPLL_INT_DEC_SEL_SHIFT    1
#define REG_MIPI_BBPLL_INT_DEC_SEL_MASK     (0x7 << REG_MIPI_BBPLL_INT_DEC_SEL_SHIFT)
#define REG_MIPI_BBPLL_INT_DEC_SEL(n)       BITFIELD_VAL(REG_MIPI_BBPLL_INT_DEC_SEL, n)
#define REG_MIPI_BBPLL_DITHER_BYPASS        (1 << 4)
#define REG_MIPI_BBPLL_PRESCALER_DEL_SHIFT  5
#define REG_MIPI_BBPLL_PRESCALER_DEL_MASK   (0xF << REG_MIPI_BBPLL_PRESCALER_DEL_SHIFT)
#define REG_MIPI_BBPLL_PRESCALER_DEL(n)     BITFIELD_VAL(REG_MIPI_BBPLL_PRESCALER_DEL, n)
#define REG_MIPI_BBPLL_CAL_OPT              (1 << 9)
#define REG_MIPI_BBPLL_INIT_DELAY_SHIFT     10
#define REG_MIPI_BBPLL_INIT_DELAY_MASK      (0x7 << REG_MIPI_BBPLL_INIT_DELAY_SHIFT)
#define REG_MIPI_BBPLL_INIT_DELAY(n)        BITFIELD_VAL(REG_MIPI_BBPLL_INIT_DELAY, n)
#define REG_MIPI_BBPLL_CNT_TIME_SHIFT       13
#define REG_MIPI_BBPLL_CNT_TIME_MASK        (0x7 << REG_MIPI_BBPLL_CNT_TIME_SHIFT)
#define REG_MIPI_BBPLL_CNT_TIME(n)          BITFIELD_VAL(REG_MIPI_BBPLL_CNT_TIME, n)

// REG_0E
#define REG_MIPI_BBPLL_DIV_DR               (1 << 0)
#define REG_MIPI_BBPLL_DIV_FRAC_SHIFT       1
#define REG_MIPI_BBPLL_DIV_FRAC_MASK        (0x3 << REG_MIPI_BBPLL_DIV_FRAC_SHIFT)
#define REG_MIPI_BBPLL_DIV_FRAC(n)          BITFIELD_VAL(REG_MIPI_BBPLL_DIV_FRAC, n)
#define REG_MIPI_BBPLL_DIV_INT_SHIFT        3
#define REG_MIPI_BBPLL_DIV_INT_MASK         (0x7F << REG_MIPI_BBPLL_DIV_INT_SHIFT)
#define REG_MIPI_BBPLL_DIV_INT(n)           BITFIELD_VAL(REG_MIPI_BBPLL_DIV_INT, n)
#define REG_MIPI_BBPLL_PU                   (1 << 10)
#define REG_MIPI_BBPLL_CAL_CLK_EN_DR        (1 << 11)
#define REG_MIPI_BBPLL_CAL_CLK_EN           (1 << 12)

// REG_0F
#define REG_MIPI_BBPLL_SDM_FREQWORD_15_0_SHIFT 0
#define REG_MIPI_BBPLL_SDM_FREQWORD_15_0_MASK (0xFFFF << REG_MIPI_BBPLL_SDM_FREQWORD_15_0_SHIFT)
#define REG_MIPI_BBPLL_SDM_FREQWORD_15_0(n) BITFIELD_VAL(REG_MIPI_BBPLL_SDM_FREQWORD_15_0, n)

// REG_10
#define REG_MIPI_BBPLL_SDM_FREQWORD_31_16_SHIFT 0
#define REG_MIPI_BBPLL_SDM_FREQWORD_31_16_MASK (0xFFFF << REG_MIPI_BBPLL_SDM_FREQWORD_31_16_SHIFT)
#define REG_MIPI_BBPLL_SDM_FREQWORD_31_16(n) BITFIELD_VAL(REG_MIPI_BBPLL_SDM_FREQWORD_31_16, n)

// REG_11
#define REG_MIPI_BBPLL_WAIT_TIME_SHIFT      0
#define REG_MIPI_BBPLL_WAIT_TIME_MASK       (0x7 << REG_MIPI_BBPLL_WAIT_TIME_SHIFT)
#define REG_MIPI_BBPLL_WAIT_TIME(n)         BITFIELD_VAL(REG_MIPI_BBPLL_WAIT_TIME, n)
#define REG_MIPI_BBPLL_CAL_MANUAL           (1 << 3)
#define REG_MIPI_BBPLL_CAL_CNT_EN_DR        (1 << 4)
#define REG_MIPI_BBPLL_CAL_CNT_EN           (1 << 5)
#define REG_MIPI_BBPLL_CAL_EN_DR            (1 << 6)
#define REG_MIPI_BBPLL_CAL_EN               (1 << 7)
#define REG_BBPLL_CAPBANK_CAL_BYPASS        (1 << 8)
#define REG_MIPI_BBPLL_CAL_RESETN_DR        (1 << 9)
#define REG_MIPI_BBPLL_CAL_RESETN           (1 << 10)
#define REG_MIPI_BBPLL_SDM_RESETN_DR        (1 << 11)
#define REG_MIPI_BBPLL_SDM_RESETN           (1 << 12)

// REG_12
#define REG_MIPI_BBPLL_VCO_CAPBANK_DR       (1 << 0)
#define REG_MIPI_BBPLL_VCO_CAPBANK_SHIFT    1
#define REG_MIPI_BBPLL_VCO_CAPBANK_MASK     (0x1FF << REG_MIPI_BBPLL_VCO_CAPBANK_SHIFT)
#define REG_MIPI_BBPLL_VCO_CAPBANK(n)       BITFIELD_VAL(REG_MIPI_BBPLL_VCO_CAPBANK, n)
#define REG_DIG_MIPI_BBPLL_SDM_CLK_SEL_DR   (1 << 10)
#define REG_DIG_MIPI_BBPLL_SDM_CLK_SEL      (1 << 11)
#define REG_MIPI_1M_PULSE_ALWAYS_ON         (1 << 12)
#define REG_MIPI_1M_PULSE_MODE              (1 << 13)

// REG_13
#define REG_DIG_MIPI_BBPLL_LDO_PU_DR        (1 << 0)
#define REG_DIG_MIPI_BBPLL_LDO_PU           (1 << 1)
#define REG_DIG_MIPI_BBPLL_LDO_PRECHARGE_DR (1 << 2)
#define REG_DIG_MIPI_BBPLL_LDO_PRECHARGE    (1 << 3)
#define REG_DIG_MIPI_BBPLL_LPF_PRECHARGE_DR (1 << 4)
#define REG_DIG_MIPI_BBPLL_LPF_PRECHARGE    (1 << 5)
#define REG_DIG_MIPI_BBPLL_VCO_PU_DR        (1 << 6)
#define REG_DIG_MIPI_BBPLL_VCO_PU           (1 << 7)
#define REG_DIG_MIPI_BBPLL_CP_PU_DR         (1 << 8)
#define REG_DIG_MIPI_BBPLL_CP_PU            (1 << 9)
#define REG_DIG_MIPI_BBPLL_CP_PRECHARGE_DR  (1 << 10)
#define REG_DIG_MIPI_BBPLL_CP_PRECHARGE     (1 << 11)
#define REG_DIG_MIPI_BBPLL_DIV_PU_DR        (1 << 12)
#define REG_DIG_MIPI_BBPLL_DIV_PU           (1 << 13)
#define REG_DIG_MIPI_BBPLL_POSTDIV_PU_DR    (1 << 14)
#define REG_DIG_MIPI_BBPLL_POSTDIV_PU       (1 << 15)

// REG_14
#define REG_BBPLL_WAIT_T1_VALUE_SHIFT       0
#define REG_BBPLL_WAIT_T1_VALUE_MASK        (0xFF << REG_BBPLL_WAIT_T1_VALUE_SHIFT)
#define REG_BBPLL_WAIT_T1_VALUE(n)          BITFIELD_VAL(REG_BBPLL_WAIT_T1_VALUE, n)
#define REG_BBPLL_WAIT_T2_VALUE_SHIFT       8
#define REG_BBPLL_WAIT_T2_VALUE_MASK        (0xFF << REG_BBPLL_WAIT_T2_VALUE_SHIFT)
#define REG_BBPLL_WAIT_T2_VALUE(n)          BITFIELD_VAL(REG_BBPLL_WAIT_T2_VALUE, n)

// REG_15
#define REG_BBPLL_WAIT_T3_VALUE_SHIFT       0
#define REG_BBPLL_WAIT_T3_VALUE_MASK        (0xFF << REG_BBPLL_WAIT_T3_VALUE_SHIFT)
#define REG_BBPLL_WAIT_T3_VALUE(n)          BITFIELD_VAL(REG_BBPLL_WAIT_T3_VALUE, n)
#define REG_BBPLL_WAIT_T4_VALUE_SHIFT       8
#define REG_BBPLL_WAIT_T4_VALUE_MASK        (0xFF << REG_BBPLL_WAIT_T4_VALUE_SHIFT)
#define REG_BBPLL_WAIT_T4_VALUE(n)          BITFIELD_VAL(REG_BBPLL_WAIT_T4_VALUE, n)

// REG_16
#define REG_MIPI_BBPLL_PFD_RSTB             (1 << 0)
#define REG_MIPI_BBPLL_PFD_RSTB_SEL         (1 << 1)
#define REG_MIPI_BBPLL_REFCLK_SEL           (1 << 2)
#define REG_MIPI_BBPLL_VRES_LDO_SHIFT       3
#define REG_MIPI_BBPLL_VRES_LDO_MASK        (0x7 << REG_MIPI_BBPLL_VRES_LDO_SHIFT)
#define REG_MIPI_BBPLL_VRES_LDO(n)          BITFIELD_VAL(REG_MIPI_BBPLL_VRES_LDO, n)
#define REG_MIPI_BBPLL_VCO_CAL_VT_SHIFT     6
#define REG_MIPI_BBPLL_VCO_CAL_VT_MASK      (0x3 << REG_MIPI_BBPLL_VCO_CAL_VT_SHIFT)
#define REG_MIPI_BBPLL_VCO_CAL_VT(n)        BITFIELD_VAL(REG_MIPI_BBPLL_VCO_CAL_VT, n)
#define REG_MIPI_BBPLL_LPF_PRECHAR_VT_SHIFT 8
#define REG_MIPI_BBPLL_LPF_PRECHAR_VT_MASK  (0x3 << REG_MIPI_BBPLL_LPF_PRECHAR_VT_SHIFT)
#define REG_MIPI_BBPLL_LPF_PRECHAR_VT(n)    BITFIELD_VAL(REG_MIPI_BBPLL_LPF_PRECHAR_VT, n)
#define REG_MIPI_BBPLL_BW_SEL_SHIFT         10
#define REG_MIPI_BBPLL_BW_SEL_MASK          (0xF << REG_MIPI_BBPLL_BW_SEL_SHIFT)
#define REG_MIPI_BBPLL_BW_SEL(n)            BITFIELD_VAL(REG_MIPI_BBPLL_BW_SEL, n)
#define REG_MIPI_BBPLL_EN_TEMC              (1 << 14)

// REG_17
#define REG_MIPI_BBPLL_TEMC_ITUNE_SHIFT     0
#define REG_MIPI_BBPLL_TEMC_ITUNE_MASK      (0x3 << REG_MIPI_BBPLL_TEMC_ITUNE_SHIFT)
#define REG_MIPI_BBPLL_TEMC_ITUNE(n)        BITFIELD_VAL(REG_MIPI_BBPLL_TEMC_ITUNE, n)
#define REG_MIPI_BBPLL_VRES_VCO_SHIFT       2
#define REG_MIPI_BBPLL_VRES_VCO_MASK        (0x3 << REG_MIPI_BBPLL_VRES_VCO_SHIFT)
#define REG_MIPI_BBPLL_VRES_VCO(n)          BITFIELD_VAL(REG_MIPI_BBPLL_VRES_VCO, n)
#define REG_MIPI_BBPLL_VCO_ICTRL_SHIFT      4
#define REG_MIPI_BBPLL_VCO_ICTRL_MASK       (0x7 << REG_MIPI_BBPLL_VCO_ICTRL_SHIFT)
#define REG_MIPI_BBPLL_VCO_ICTRL(n)         BITFIELD_VAL(REG_MIPI_BBPLL_VCO_ICTRL, n)
#define REG_MIPI_BBPLL_VRES_CP_SHIFT        7
#define REG_MIPI_BBPLL_VRES_CP_MASK         (0x3 << REG_MIPI_BBPLL_VRES_CP_SHIFT)
#define REG_MIPI_BBPLL_VRES_CP(n)           BITFIELD_VAL(REG_MIPI_BBPLL_VRES_CP, n)
#define REG_MIPI_BBPLL_ICP_SHIFT            9
#define REG_MIPI_BBPLL_ICP_MASK             (0x7 << REG_MIPI_BBPLL_ICP_SHIFT)
#define REG_MIPI_BBPLL_ICP(n)               BITFIELD_VAL(REG_MIPI_BBPLL_ICP, n)
#define REG_MIPI_BBPLL_IOFST_SHIFT          12
#define REG_MIPI_BBPLL_IOFST_MASK           (0x7 << REG_MIPI_BBPLL_IOFST_SHIFT)
#define REG_MIPI_BBPLL_IOFST(n)             BITFIELD_VAL(REG_MIPI_BBPLL_IOFST, n)
#define REG_MIPI_BBPLL_CP_BYPASS_R          (1 << 15)

// REG_18
#define REG_MIPI_BBPLL_CP_MODE              (1 << 0)
#define REG_MIPI_BBPLL_VRES_DIV_SHIFT       1
#define REG_MIPI_BBPLL_VRES_DIV_MASK        (0x3 << REG_MIPI_BBPLL_VRES_DIV_SHIFT)
#define REG_MIPI_BBPLL_VRES_DIV(n)          BITFIELD_VAL(REG_MIPI_BBPLL_VRES_DIV, n)
#define REG_MIPI_BBPLL_DIV_DLY_CAP_SHIFT    3
#define REG_MIPI_BBPLL_DIV_DLY_CAP_MASK     (0xF << REG_MIPI_BBPLL_DIV_DLY_CAP_SHIFT)
#define REG_MIPI_BBPLL_DIV_DLY_CAP(n)       BITFIELD_VAL(REG_MIPI_BBPLL_DIV_DLY_CAP, n)
#define REG_MIPI_BBPLL_REFCLK_EDG_SW        (1 << 7)
#define REG_MIPI_BBPLL_SEL_DYNCLK_SHIFT     8
#define REG_MIPI_BBPLL_SEL_DYNCLK_MASK      (0x7 << REG_MIPI_BBPLL_SEL_DYNCLK_SHIFT)
#define REG_MIPI_BBPLL_SEL_DYNCLK(n)        BITFIELD_VAL(REG_MIPI_BBPLL_SEL_DYNCLK, n)
#define REG_MIPI_BBPLL_VRES_PDIV_SHIFT      11
#define REG_MIPI_BBPLL_VRES_PDIV_MASK       (0x3 << REG_MIPI_BBPLL_VRES_PDIV_SHIFT)
#define REG_MIPI_BBPLL_VRES_PDIV(n)         BITFIELD_VAL(REG_MIPI_BBPLL_VRES_PDIV, n)

// REG_019
#define REG_MIPI_BBPLL_EN_DSICLK            (1 << 0)
#define REG_MIPI_BBPLL_EN_PSRAMCLK          (1 << 1)
#define REG_MIPI_BBPLL_EN_MCUCLK            (1 << 2)
#define REG_MIPI_BBPLL_DIVN_DSI_SHIFT       3
#define REG_MIPI_BBPLL_DIVN_DSI_MASK        (0x1F << REG_MIPI_BBPLL_DIVN_DSI_SHIFT)
#define REG_MIPI_BBPLL_DIVN_DSI(n)          BITFIELD_VAL(REG_MIPI_BBPLL_DIVN_DSI, n)
#define REG_MIPI_BBPLL_VRES_TST_SHIFT       8
#define REG_MIPI_BBPLL_VRES_TST_MASK        (0xF << REG_MIPI_BBPLL_VRES_TST_SHIFT)
#define REG_MIPI_BBPLL_VRES_TST(n)          BITFIELD_VAL(REG_MIPI_BBPLL_VRES_TST, n)

// REG_01A
#define REG_MIPI_BBPLL_DIVN_PSRAM_SHIFT     0
#define REG_MIPI_BBPLL_DIVN_PSRAM_MASK      (0x1F << REG_MIPI_BBPLL_DIVN_PSRAM_SHIFT)
#define REG_MIPI_BBPLL_DIVN_PSRAM(n)        BITFIELD_VAL(REG_MIPI_BBPLL_DIVN_PSRAM, n)
#define REG_MIPI_BBPLL_DIVN_MCU_SHIFT       5
#define REG_MIPI_BBPLL_DIVN_MCU_MASK        (0x1F << REG_MIPI_BBPLL_DIVN_MCU_SHIFT)
#define REG_MIPI_BBPLL_DIVN_MCU(n)          BITFIELD_VAL(REG_MIPI_BBPLL_DIVN_MCU, n)
#define REG_MIPI_BBPLL_EN_PSRAMCLK_DR       (1 << 10)
#define REG_MIPI_BBPLL_EN_MCUCLK_DR         (1 << 11)
#define REG_MIPI_BBPLL_PU_DR                (1 << 12)

#endif
