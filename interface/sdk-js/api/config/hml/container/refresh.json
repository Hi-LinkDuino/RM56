{
  "name": "refresh",
  "version": [
    {
      "name": "v3.0"
    }
  ],
  "syscap": [
    "SystemCapability.ArkUI.ArkUI.Full"
  ],
  "description": [
    {
      "name": "The <refresh> component is used to pull down to refresh the page."
    }
  ],
  "attributes": [
    {
      "name": "offset",
      "required": false,
      "description": [
        {
          "name": "Distance to the top of the parent component from the <refresh> component that comes to rest after a successful swipe gesture."
        }
      ],
      "type": "length"
    },
    {
      "name": "refreshing",
      "required": false,
      "description": [
        {
          "name": "Whether the <refresh> component is being refreshed."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "type",
      "required": false,
      "description": [
        {
          "name": "Dynamic effect when the component is refreshed. Two options are available and cannot be modified dynamically. auto: default effect. When the list is pulled to the top, the list does not move. When the list is pulled to the bottom, a circle is displayed. pulldown: When the list is pulled to the top, users can continue to pull down to trigger a refresh. The rebound effect will appear after the refresh. If the child component contains a list, set scrolleffect of the list to no to prevent drop-down effect conflicts."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "auto"
        },
        {
          "name": "pulldown"
        }
      ]
    },
    {
      "name": "lasttime",
      "required": false,
      "description": [
        {
          "name": "Whether to display the last update time. The character string format is last update time: XXXX, where XXXX is displayed based on the time and date display specifications and cannot be dynamically modified. (It is recommended that this attribute be used when type is set to pulldown. The fixed distance is at the bottom of the content drop-down area. Pay attention to the offset attribute setting to prevent overlapping.)."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "timeoffset",
      "version": [
        {
          "name": "v6.0"
        }
      ],
      "required": false,
      "description": [
        {
          "name": "Sets the distance between the update time and the top of the parent component."
        }
      ],
      "type": "length"
    },
    {
      "name": "friction",
      "required": false,
      "description": [
        {
          "name": "Pull-down friction coefficient. The value ranges from 0 to 100. A larger value indicates a more responsive component. For example, if a user pulls the component down 100 px, it will actually move 100 * friction% px."
        }
      ],
      "type": "number"
    },
    {
      "name": "shareid",
      "required": false,
      "description": [
        {
          "name": "Used for the transition of shared elements and takes effect only when it is configured. This attribute cannot be modified after being set. list-item, image, text, button, label components are supported for the transition of shared elements."
        }
      ],
      "type": "string"
    },
    {
      "name": "id",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Unique ID of a component.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "style",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Style declaration of a component.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "class",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Style class of a component, which is used to refer to a style table.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "ref",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Used to register reference information of child elements or child components. The reference information is registered with the parent component on $refs.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "disabled",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Whether a component is disabled. If it is disabled, it cannot respond to user interaction."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "focusable",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Whether a component can gain focus. When focusable is set to true, the component can respond to focus events and key events. If a key event or click event is set for the component, this attribute is set to true automatically."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "data-*",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Attribute set for a component to facilitate data storage and reading."
        }
      ],
      "type": "string"
    },
    {
      "name": "click-effect",
      "required": false,
      "version": [
        {
          "name": "v5.0"
        }
      ],
      "description": [
        {
          "name": "Click effect complying with spring physics. Available values are as follows:\nspring-small: The button icon scales down to 90% of its size when it is selected. This is appropriate for small icons.\nspring-medium: The component scales down to 95% of its size when it is selected. This is appropriate for medium-sized components.spring-large: The button icon scales down and up by 95% of its size, which is appropriate to large icons."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "spring-small"
        },
        {
          "name": "spring-medium"
        },
        {
          "name": "spring-large"
        }
      ]
    },
    {
      "name": "voicelabel",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Voice label. When a voice label is triggered, the click event of the component is triggered."
        }
      ],
      "type": "string"
    },
    {
      "name": "subscriptflag",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Voice subscript switch. Available values are as follows:\nauto: For the <image> and <list-item> components, if subscriptflag is set to auto, the voice subscript is turned on. For other components, if subscriptflag is set to auto, the voice subscript is turned off.\non: Turn on the voice subscript.\noff: Turn off the voice subscript.If no customized subscript is set, the subscript is automatically accumulated from 1."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "auto"
        },
        {
          "name": "on"
        },
        {
          "name": "off"
        }
      ]
    },
    {
      "name": "subscriptlabel",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Custom subscript. After it is set, the subscript is displayed in the way you specified. To make this attribute take effect, you need to turn on the voice subscript."
        }
      ],
      "type": "string"
    },
    {
      "name": "scenelabel",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Available values are as follows:\nvideo: Video scenario. For example, to watch a video, a user can say the voiceLabel (usually the video name), play voiceLabel, see voiceLabel, or watch voiceLabel, etc.\naudio: Music scenario. For example, to listen to a song, a user can say the voiceLabel (usually the song name), play voiceLabel, or listen voiceLabel, etc.\npage: Page scenario. For example, to go to a page, a user can say the voiceLabel (usually the page name), switch to voiceLabel, go to voiceLabel, or jump to voiceLabel, etc.\nswitch: Switch scenario. For example, to turn on or turn off a switch, a user can say the voiceLabel (usually the switch name), turn on voiceLabel, open voiceLabel, turn off voiceLabel, close voiceLabel, etc.common: Common scenario, which is triggered by the voiceLabel."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "video"
        },
        {
          "name": "audio"
        },
        {
          "name": "page"
        },
        {
          "name": "switch"
        },
        {
          "name": "common"
        }
      ]
    },
    {
      "name": "accessibilitygroup",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Accessibility group. If this attribute is set to true, the component and all its child components form an entire selectable component, and the accessibility service will no longer available for the content of its child components."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "accessibilitytext",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Accessibility text. If a component does not contain text information, it will not be read when the component is selected by the screen reader. In this case, the screen reader user cannot know which component is selected. To solve this problem, you can set this attribute for components without text information. When the component is selected by the screen reader, the specified accessibility text will be read, informing the user which component is selected. If a component with this attribute set contains text information, only the accessibility text will be read."
        }
      ],
      "type": "string"
    },
    {
      "name": "accessibilitydescription",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Accessibility description. You can specify further explanation of the current component, for example, possible operation consequences, especially those cannot be learned from component attributes and accessibility text. You can set a detailed description text for the attribute of the component to help users understand the operation to be performed. If a component contains both text information and the accessibility description, the text is read first and then the accessibility description, when the component is selected."
        }
      ],
      "type": "string"
    },
    {
      "name": "accessibilityimportance",
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Accessibility importance, which is used to decide whether a component can be identified by the accessibility service. The value can be auto, yes, no, or no-hide-descendants. The last value forces the screen reader to ignore the current component and all its subcomponents.\nyes: The current component is selectable for the accessibility service.no: The current component is not selectable for the accessibility service."
        }
      ],
      "type": "string"
    },
    {
      "name": "for",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Expands the current element based on the configured data list.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "tid",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "The tid attribute accelerates the for loop and improves the re-rendering efficiency when data in a loop changes.\nThe tid attribute specifies the unique ID of each element in the array. If it is not specified, the index of each element in the array is used as the ID. For example, tid=\"id\" indicates that the id attribute of each element is its unique ID.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "string"
    },
    {
      "name": "if",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Whether the element is added or removed.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "dir",
      "version": [
        {
          "name": "v6.0"
        }
      ],
      "required": false,
      "description": [
        {
          "name": "Sets the element layout mode. The rtl, ltr, and auto attributes can be set."
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "ltr"
        },
        {
          "name": "rtl"
        },
        {
          "name": "auto"
        }
      ]
    },
    {
      "name": "elif",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "else",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [],
      "type": "string"
    },
    {
      "name": "show",
      "syscap": [
        "SystemCapability.ArkUI.ArkUI.Full",
        "SystemCapability.ArkUI.ArkUI.Lite"
      ],
      "required": false,
      "version": [
        {
          "name": "v4.0"
        }
      ],
      "description": [
        {
          "name": "Whether the element is displayed or hidden.",
          "syscap": [
            "SystemCapability.ArkUI.ArkUI.Full",
            "SystemCapability.ArkUI.ArkUI.Lite"
          ]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    }
  ],
  "events": [
    {
      "name": "refresh",
      "description": [
        {
          "name": "Called when the <refresh> component is pulled down and the refresh status changes. Available values are as follows: false: The <refresh> component is being pulled down. true: The <refresh> component is not being pulled down."
        }
      ]
    },
    {
      "name": "pulldown",
      "description": [
        {
          "name": "Triggered when a user starts or stops pulling down the <refresh> component. Available values are as follows: start: The pull-down starts. end: The pull-down ends."
        }
      ]
    }
  ],
  "supportedSubComponents": true,
  "supportedSubComponentsRestriction": [],
  "unSupportSubComponentsRestriction": [],
  "parentComponentsRestriction": []
}