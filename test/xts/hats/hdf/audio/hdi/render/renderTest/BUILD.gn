# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos_var.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/audio/audio.gni")
import("//test/xts/tools/build/suite.gni")

###########################systemtest##############################
module_output_path = "hdf/audio"

###########################HatsHdfAudioRenderTest######################
ohos_moduletest_suite("HatsHdfAudioRenderTest") {
  module_out_path = module_output_path
  sources = [
    "../../../common/hdi_common/src/audio_hdi_common.cpp",
    "src/audio_hdirender_test.cpp",
  ]

  include_dirs = [
    "//drivers/peripheral/audio/hal/hdi_passthrough/include",
    "//drivers/peripheral/audio/interfaces/include",
    "//drivers/peripheral/audio/hal/hdi_binder/proxy/include",
    "//drivers/adapter/uhdf2/include/hdi",
    "//drivers/adapter/uhdf2/shared/include",
    "//drivers/framework/include/core",
    "//drivers/framework/include/utils",
    "//drivers/framework/include/osal",
    "//drivers/framework/include",
    "//third_party/bounds_checking_function/include",
    "//drivers/framework/utils/include",
    "//drivers/adapter/uhdf2/osal/include",
    "//third_party/googletest/googletest/include/gtest",
    "//test/xts/hats/hdf/audio/common/hdi_common/include",
    "//test/xts/hats/hdf/audio/hdi/render/renderTest/include",
  ]
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  defines = []
  if (enable_audio_adm_so) {
    defines += [ "AUDIO_ADM_SO" ]
  }
  if (enable_audio_mpi_so) {
    defines += [ "AUDIO_MPI_SO" ]
  }
  if (enable_audio_adm_service) {
    defines += [ "AUDIO_ADM_SERVICE" ]
  }
  if (enable_audio_mpi_service) {
    defines += [ "AUDIO_MPI_SERVICE" ]
  }
}
